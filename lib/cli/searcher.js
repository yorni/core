#!/usr/bin/env node
"use strict";var e=require("@debut/plugin-utils"),t=require("./genetic-8697fca0.js"),r=require("./tester-transport-0f71243c.js");require("async-genetic"),require("cli-progress"),require("@master-chief/alpaca"),require("binance-api-node"),require("@tinkoff/invest-openapi-js-sdk");const i=e.cli.getArgs(),{bot:s,ticker:a,log:o,amount:c=1e4,days:n=1e3,hours:l=0,gen:u=12,pop:g=2e3,ohlc:p,gap:f=0,best:d=5,daysForStudy:k=2,daysForTrade:y=1}=i,w=e.cli.getBotData(s);async function b(e,t,i,s){try{const a=new r.TesterTransport({ohlc:p,comission:e.fee,broker:e.broker,ticker:e.ticker}),o=await t.create(a,e,1);e||process.stdout.write("Genetic CLI error: Put config in bot cfgs.ts file");const{broker:c="tinkoff",ticker:n,interval:l}=e;let u=await r.getHistory({broker:c,ticker:n,interval:l,days:i,gapDays:s});t.ticksFilter&&(u=u.filter(t.ticksFilter(e))),console.log("Tested in ",u.length," candles..."),a.setTicks(u),await o.start(),await a.run(),await o.closeAll(),await o.dispose(),console.log(t.stats(o))}catch(e){console.log(e)}}!async function(){if(!w)return void process.stdout.write("Genetic CLI error: Incorrect configuration");const{configs:e,meta:r}=w;for(let i=0;i<n;i++){const s={...e[a],ticker:a,amount:Number(c)},n={days:k,hours:l,generations:u,populationSize:g,log:o,ohlc:p,gapDays:f+y+i,validateSchema:r.validate,score:r.score,stats:r.stats,create:r.create,ticksFilter:r.ticksFilter,best:d},w=new t.GeneticWrapper(n);let h=await w.start(r.parameters,s);h=h.map(((e,t)=>(e.config.id=t,e)));const m=h[0].config;await b(m,r,y,f+y+i-1)}}();
