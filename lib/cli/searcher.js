#!/usr/bin/env node
"use strict";var e=require("@debut/plugin-utils"),t=require("./genetic-8697fca0.js"),r=require("./tester-transport-0f71243c.js");require("async-genetic"),require("cli-progress"),require("@master-chief/alpaca"),require("binance-api-node"),require("@tinkoff/invest-openapi-js-sdk");const i=e.cli.getArgs(),{bot:s,ticker:o,log:a,amount:c=1e4,days:n=1e3,hours:l=0,gen:u=12,pop:g=2e3,ohlc:p,gap:f=0,best:b=5,daysForStudy:d=2,daysForTrade:k=1}=i;let m=Number(c);const y=e.cli.getBotData(s);async function w(e,t,i,s){try{const o=new r.TesterTransport({ohlc:p,comission:e.fee,broker:e.broker,ticker:e.ticker}),a=await t.create(o,e,1);e||process.stdout.write("Genetic CLI error: Put config in bot cfgs.ts file");const{broker:c="tinkoff",ticker:n,interval:l}=e;let u=await r.getHistory({broker:c,ticker:n,interval:l,days:i,gapDays:s});t.ticksFilter&&(u=u.filter(t.ticksFilter(e))),console.log("Tested in ",u.length," candles..."),o.setTicks(u),await a.start(),await o.run(),await a.closeAll(),await a.dispose(),console.log(t.stats(a)),m+=Number(t.score(a))}catch(e){console.log(e)}}!async function(){if(!y)return void process.stdout.write("Genetic CLI error: Incorrect configuration");const{configs:e,meta:r}=y;for(let i=n;i>0;i-=k){const s={...e[o],ticker:o,amount:Number(c)},n={days:d,hours:l,generations:u,populationSize:g,log:a,ohlc:p,gapDays:Number(f)+Number(k)+Number(i),validateSchema:r.validate,score:r.score,stats:r.stats,create:r.create,ticksFilter:r.ticksFilter,best:b},y=new t.GeneticWrapper(n);let h=await y.start(r.parameters,s);h=h.map(((e,t)=>(e.config.id=t,e)));const N=h[0].config;N.amount=m,await w(N,r,Number(k),Number(i)-Number(k)+1)}console.log(m)}();
