#!/usr/bin/env node
"use strict";var e=require("@debut/plugin-utils"),t=require("./genetic-8697fca0.js"),r=require("./tester-transport-0f71243c.js");require("async-genetic"),require("cli-progress"),require("@master-chief/alpaca"),require("binance-api-node"),require("@tinkoff/invest-openapi-js-sdk");const s=e.cli.getArgs(),{bot:i,ticker:o,log:a,amount:c=1e4,days:n=1e3,hours:l=0,gen:g=12,pop:u=2e3,ohlc:p,gap:f=0,best:d=5,daysForStudy:k=2,daysForTrade:y=1}=s;let w=c;const b=e.cli.getBotData(i);async function m(e,t,s,i){try{const o=new r.TesterTransport({ohlc:p,comission:e.fee,broker:e.broker,ticker:e.ticker}),a=await t.create(o,e,1);e||process.stdout.write("Genetic CLI error: Put config in bot cfgs.ts file");const{broker:c="tinkoff",ticker:n,interval:l}=e;let g=await r.getHistory({broker:c,ticker:n,interval:l,days:s,gapDays:i});t.ticksFilter&&(g=g.filter(t.ticksFilter(e))),console.log("Tested in ",g.length," candles..."),o.setTicks(g),await a.start(),await o.run(),await a.closeAll(),await a.dispose(),console.log(t.stats(a)),console.log(t.stats)}catch(e){console.log(e)}}!async function(){if(!b)return void process.stdout.write("Genetic CLI error: Incorrect configuration");const{configs:e,meta:r}=b;for(let s=0;s<n;s++){const i={...e[o],ticker:o,amount:Number(c)},n={days:k,hours:l,generations:g,populationSize:u,log:a,ohlc:p,gapDays:f+y+s,validateSchema:r.validate,score:r.score,stats:r.stats,create:r.create,ticksFilter:r.ticksFilter,best:d},b=new t.GeneticWrapper(n);let h=await b.start(r.parameters,i);h=h.map(((e,t)=>(e.config.id=t,e))),console.log(h[0].config);const q=h[0].config;q.amount=w,await m(q,r,y,f+y+s-1)}}();
